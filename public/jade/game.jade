- var activePlayer = this.turn().player();
.active-player Active Player: 
    = activePlayer.name()
.time-left Time Left in Turn:
    = Math.ceil(this.turn().timeLeft() / 1000)
.energy Energy 
    - each player in this.players()
        - if (player.isMe())
            = parseInt(player.energy())
- each row in this.map().tiles()
    .row
        - each tile in row
            .tile(model='Tile', modelid=tile.id(), player=tile.player() && tile.player().color(), mode=tile.mode(), selected=tile.selected())
                .units
                    - each unit in tile.units()
                        .unit(model='Unit', modelid=unit.id(), selecting=unit.selecting(), selected=unit.selected())
                            .unit-icon
                - if (tile.selected())
                    .actions
                        .action.produce(action="produce") P
                        .action.defend(action="defend") D
.hud
    .minimap
    .unit-summary
    .commands